═══════════════════════════════════════════════════════════
    RENDER.COM DEPLOYMENT - QUICK REFERENCE
═══════════════════════════════════════════════════════════

📋 BACKEND CONFIGURATION
────────────────────────────────────────────────────────────
Service Name:     treasure-hunt-backend
Root Directory:   backend
Build Command:    npm install && npx prisma generate --schema=./src/prisma/schema.prisma && npx tsc
Start Command:    node dist/index.js
Plan:            Free

Environment Variables:
  DATABASE_URL = postgresql://neondb_owner:npg_...
  PORT = 3002
  NODE_ENV = production

────────────────────────────────────────────────────────────

📋 FRONTEND CONFIGURATION
────────────────────────────────────────────────────────────
Service Name:     treasure-hunt-frontend
Root Directory:   frontend
Build Command:    npm install && npm run build
Start Command:    npm start
Plan:            Free

Environment Variables:
  NEXT_PUBLIC_API_URL = https://YOUR-BACKEND-URL.onrender.com
  NEXT_PUBLIC_WS_URL = wss://YOUR-BACKEND-URL.onrender.com
  NODE_ENV = production

⚠️  Replace YOUR-BACKEND-URL with actual backend URL from step 1!

────────────────────────────────────────────────────────────

🚀 DEPLOYMENT STEPS
────────────────────────────────────────────────────────────
1. Push code to GitHub
2. Go to render.com
3. New Web Service → Connect GitHub repo
4. Deploy backend first (copy URL)
5. Deploy frontend (use backend URL in env vars)
6. Done! ✅

────────────────────────────────────────────────────────────

🔗 YOUR URLS (After Deploy)
────────────────────────────────────────────────────────────
Frontend:  https://treasure-hunt-frontend.onrender.com
Backend:   https://treasure-hunt-backend.onrender.com
Health:    https://treasure-hunt-backend.onrender.com/health

────────────────────────────────────────────────────────────

⚡ KEY FEATURES
────────────────────────────────────────────────────────────
✅ Completely FREE
✅ Auto HTTPS/SSL
✅ Auto-deploy on Git push
✅ Built-in monitoring
✅ Handles 500 users easily
⚠️  Sleeps after 15 min (wakes in 30 sec)

────────────────────────────────────────────────────────────

🔄 KEEP SERVICES AWAKE DURING EVENT
────────────────────────────────────────────────────────────
Use cron-job.org or UptimeRobot:
  Ping: https://YOUR-BACKEND.onrender.com/health
  Every: 10 minutes

────────────────────────────────────────────────────────────

📊 MONITOR & DEBUG
────────────────────────────────────────────────────────────
Render Dashboard → Your Service → Logs (real-time)

Common Issues:
  Build fails → Check logs for missing dependencies
  Can't connect → Verify environment variables
  Database error → Check DATABASE_URL is correct

────────────────────────────────────────────────────────────

💰 COST: $0 (100% FREE)
⏱️  SETUP TIME: 10 minutes total
👥 CAPACITY: 500+ users

═══════════════════════════════════════════════════════════
    See RENDER-DEPLOY.md for detailed instructions
═══════════════════════════════════════════════════════════
